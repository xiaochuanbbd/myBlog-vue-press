(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{437:function(t,a,s){"use strict";s.r(a);var e=s(65),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"vue面试题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue面试题"}},[t._v("#")]),t._v(" vue面试题")]),t._v(" "),s("h2",{attrs:{id:"v-show-v-if"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#v-show-v-if"}},[t._v("#")]),t._v(" v-show  v-if")]),t._v(" "),s("p",[t._v("v-show是使用css中的display：none， v-if是对 Dom元素创建 ，元素频繁更改使用v-show，一次渲染使用dom")]),t._v(" "),s("h2",{attrs:{id:"vif-优先级"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vif-优先级"}},[t._v("#")]),t._v(" vif 优先级")]),t._v(" "),s("p",[t._v("Vif 渲染的优先级高于 v for 不要一起连用，循环出来再去看vif，再隐藏 vif建议使用在父元素上面")]),t._v(" "),s("h2",{attrs:{id:"vfor-循环对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vfor-循环对象"}},[t._v("#")]),t._v(" vfor 循环对象")]),t._v(" "),s("p",[t._v("v-for 可以使用对象进行循环 三个参数（value，key,index）")]),t._v(" "),s("h2",{attrs:{id:"keepalive"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#keepalive"}},[t._v("#")]),t._v(" keepalive")]),t._v(" "),s("p",[t._v("使用keep-alive可以在activated里执行原本在mounted的逻辑")]),t._v(" "),s("h2",{attrs:{id:"事件target"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件target"}},[t._v("#")]),t._v(" 事件target")]),t._v(" "),s("p",[t._v("事件对象@click=xxx（e）e.target为触发时间的元素")]),t._v(" "),s("h2",{attrs:{id:"组件通信方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#组件通信方法"}},[t._v("#")]),t._v(" 组件通信方法")]),t._v(" "),s("ul",[s("li",[t._v("父子组件：props/$emit")]),t._v(" "),s("li",[t._v("兄弟组件： eventBus 定义在vue的实例上，事件总线的方式 使用new Vue()实例上的$emits和$on 方法,这个需要在beforeDestory()钩子里面进行解绑")])]),t._v(" "),s("h2",{attrs:{id:"异步组件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#异步组件"}},[t._v("#")]),t._v(" 异步组件")]),t._v(" "),s("p",[t._v("修改import引入为函数import引入 ：（）=》｛｝")]),t._v(" "),s("h2",{attrs:{id:"组件缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#组件缓存"}},[t._v("#")]),t._v(" 组件缓存")]),t._v(" "),s("p",[t._v("keepalive 组件内容不多使用v-show也可以实现效果")]),t._v(" "),s("h2",{attrs:{id:"插槽的使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#插槽的使用"}},[t._v("#")]),t._v(" 插槽的使用")]),t._v(" "),s("p",[t._v("理解插槽：在子组件中站好了位置，使用该子组件是可以传递任意的内容给他，自动填坑，替换放置slot的位置\n插槽的原理：slot本质是返回vnode函数")]),t._v(" "),s("ul",[s("li",[t._v("默认插槽： 子组件内定义一个"),s("code",[t._v("<slot></slot>")]),t._v("标签，父组件传入内容")]),t._v(" "),s("li",[t._v("具名插槽：子组件内定义一个"),t._t("xxx"),t._v("标签， 父组件通过 "),void 0,t._v("来填入东西。")],2),t._v(" "),s("li",[t._v("作用域插槽：子组件在组件内定义数据 父组件在子组件标签名上获取数据，使用插槽 内的数据")]),t._v(" "),s("li",[t._v("作用域+具名插槽混合使用： 父组件 在template标签内将default替换为name属性绑定的")])]),t._v(" "),s("h2",{attrs:{id:"mvvm-model-view-viewmodel"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mvvm-model-view-viewmodel"}},[t._v("#")]),t._v(" MVVM model-view- viewModel")]),t._v(" "),s("p",[t._v("即将数据模型与数据表现层通过数据驱动进行分离，只需要关心数据的开发，不需要考虑页面的展示")]),t._v(" "),s("ul",[s("li",[t._v("M是代表 model 模型 、操作数据和定义数据的模型")]),t._v(" "),s("li",[t._v("V代表的是页面展示")]),t._v(" "),s("li",[t._v("vm： 代表的是数据和页面之间的桥梁，通过双向数据绑定将数据与页面绑定起来，从而达到数据更新即更新页面的功\n能。 这里的更新是同步操作的，无需人工干涉")])]),t._v(" "),s("h2",{attrs:{id:"v-for中对key的理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#v-for中对key的理解"}},[t._v("#")]),t._v(" v-for中对key的理解")]),t._v(" "),s("p",[t._v("key是为了更好的支持 diff算法，通过唯一标识对更新和删除的元素进行对比，更高效的操作虚拟dom")]),t._v(" "),s("h2",{attrs:{id:"vue原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue原理"}},[t._v("#")]),t._v(" vue原理")]),t._v(" "),s("h3",{attrs:{id:"vue2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue2"}},[t._v("#")]),t._v(" vue2")]),t._v(" "),s("ul",[s("li",[t._v("通过数据劫持 结合发布者和订阅者模式，使用definedpro perty来劫持各个属性的getter和setter ，在数据更新的时候\n发布消息给各个订阅者，出发相应的回调函数")]),t._v(" "),s("li",[t._v("缺点： 需要递归对data中的复杂对象进行劫持， 删除和增加元素无法响应式，数组改变长度和通过下标修改也做不到。")])]),t._v(" "),s("h3",{attrs:{id:"vue3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue3"}},[t._v("#")]),t._v(" Vue3")]),t._v(" "),s("p",[t._v("proxy vue3\n采用新的proxy API es6里的方法\nproxy可以劫持整个对象")]),t._v(" "),s("ul",[s("li",[t._v("reflect 劫持\n1.多层代理，通过get方法来判断\n好处：不会一上来就递归data数据，而是当获取这个属性时候的时候再去判断是不是对象 是对象里的属性在递归进行reflect劫持，")]),t._v(" "),s("li",[t._v("weakmap（）\n生成弱引用，解决proxy重复代理\n缺点： 兼容性不好IE11不兼容")]),t._v(" "),s("li",[t._v("Reflect ： 类似于Object对象，其中包括了object的静态函数，但reflect并不是一个函数对象，所以他是一个不可构造的")])]),t._v(" "),s("h2",{attrs:{id:"diff算法原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#diff算法原理"}},[t._v("#")]),t._v(" diff算法原理")]),t._v(" "),s("ul",[s("li",[t._v("作用： 修改dom的一小部分，不会引起dom树的重绘和重排")]),t._v(" "),s("li",[t._v("原理： diff算法将某个节点数据变化后生成新的vnode，将新的vnode与原来的节点使用patch函数进行对比，比较新旧\n节点，并替换新旧节点，一边比较一边给真实dom打补丁进行替换")])]),t._v(" "),s("h2",{attrs:{id:"vuex相关"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vuex相关"}},[t._v("#")]),t._v(" vuex相关")]),t._v(" "),s("ul",[s("li",[t._v("vuex是一个用来集中管理数据的状态管理仓库")])]),t._v(" "),s("h3",{attrs:{id:"其中仓库分为三个区域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#其中仓库分为三个区域"}},[t._v("#")]),t._v(" 其中仓库分为三个区域：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("status：用来存放数据处 响应式数据")])]),t._v(" "),s("li",[s("p",[t._v("Mutations:存放同步代码，并且将数据传给status修改status的地方\nvuex里使用commit触发，组件内使用this.$store.commit（’xxx’）/…mapMutation(‘xxx’,参数)")])]),t._v(" "),s("li",[s("p",[t._v("actions：用来存放异步代码，并且调用异步方法的地方\n触发mutation函数，在组件内触发可以使用this.$store.dispatch（’方法名’）/ …mapAction(‘xxx’,参\n数)")])]),t._v(" "),s("li",[s("p",[t._v("getters：需要从store里的status里派生一些状态，比如对列表进行过滤或者计数等，可以理解为status的计算属性\n组件内取出数据：…mapGetters([‘xxx’,’xxx’])")])]),t._v(" "),s("li",[s("p",[t._v("Namespace:分模块管理\n给模块添加namespace：true的方式使其成为带命名空间的模块\n在根store文件内引入模块并且挂载\n组件内读取")])])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("state：$store"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("userInfo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("userName\nmutation："),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$store"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("commit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"userInfo/setUserInfo"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("userInfo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("action")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'moduleB/moduleBAction'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("root")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("Getters")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("…mapGetters")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("‘模块名"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("getter名’"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nrequire"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("context")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nwebpackAPI 自动化倒入模块\n\n")])])]),s("h2",{attrs:{id:"computed和watch的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#computed和watch的区别"}},[t._v("#")]),t._v(" computed和watch的区别")]),t._v(" "),s("p",[t._v("computed是计算属性，是根据已有的数据去进行一些计算得出一个新的数据，不支持异步和缓存，如果这个属性的属性值是一个函数\nwatch是属于监视现有的数据，监视他的变化 immediate：true. 是否立即触发，deep:true是否深度监视,监听对象内部")]),t._v(" "),s("h2",{attrs:{id:"为什么data是一个函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么data是一个函数"}},[t._v("#")]),t._v(" 为什么data是一个函数")]),t._v(" "),s("p",[t._v("data一般是出现在组件当中， 组件是可以被复用的，js里的对象是引用关系， 如果data是一个对象，那么组件间的data\n对象会相互污染，\n如果是一个函数的话，会起到隔离变量的作用")]),t._v(" "),s("h2",{attrs:{id:"v-show是重排吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#v-show是重排吗"}},[t._v("#")]),t._v(" v-show是重排吗？")]),t._v(" "),s("p",[t._v("是，重排的定义是渲染树中的节点信息发生了大小/边距等改变，要重新计算节点css的大小和位置\n因为vshow是使用的display进行元素的控制 ，会改变节点的大小和渲染树的布局 导致重排")]),t._v(" "),s("h2",{attrs:{id:"为什么·不是用index或者随机数来进行key"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么·不是用index或者随机数来进行key"}},[t._v("#")]),t._v(" 为什么·不是用index或者随机数来进行key")]),t._v(" "),s("p",[t._v("在插入或者删除的时候，key会导致绑定的index变化从而需要重新渲染，效率低。会导致性能浪费，使用index渲染key\n可能会出错")]),t._v(" "),s("h2",{attrs:{id:"vue单项数据流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue单项数据流"}},[t._v("#")]),t._v(" vue单项数据流")]),t._v(" "),s("h3",{attrs:{id:"props"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#props"}},[t._v("#")]),t._v(" Props:")]),t._v(" "),s("p",[t._v("数据从父组件传递给子组件，数据只能在父组件内进行修改，子组件无法进行修改。\n如何操作数据：")]),t._v(" "),s("ul",[s("li",[t._v("使用$emit去触发父组件中的函数对数据进行修改。")]),t._v(" "),s("li",[t._v("子组件的data新定一个值获取props，用这个去改变；")]),t._v(" "),s("li",[t._v("使用.sync修饰符")])]),t._v(" "),s("h2",{attrs:{id:"父子组件的生命周期执行顺序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#父子组件的生命周期执行顺序"}},[t._v("#")]),t._v(" 父子组件的生命周期执行顺序")]),t._v(" "),s("ul",[s("li",[t._v("父 beforeCreate")]),t._v(" "),s("li",[t._v("父 created")]),t._v(" "),s("li",[t._v("子 beforeCreate")]),t._v(" "),s("li",[t._v("子 created")]),t._v(" "),s("li",[t._v("子 mounted")]),t._v(" "),s("li",[t._v("父 mounted")]),t._v(" "),s("li",[t._v("父 beforeDestroy")]),t._v(" "),s("li",[t._v("子 beforeDestroy")]),t._v(" "),s("li",[t._v("子 destroyed")]),t._v(" "),s("li",[t._v("父 destroyed")])]),t._v(" "),s("h3",{attrs:{id:"注意"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#注意"}},[t._v("#")]),t._v(" 注意")]),t._v(" "),s("ul",[s("li",[t._v("create创建实例对象是先父后子")]),t._v(" "),s("li",[t._v("beforeDestroy是先父后子")]),t._v(" "),s("li",[t._v("父组件里的更新触及到子组件的更新是先父后子")]),t._v(" "),s("li",[t._v("mounted挂载dom是先子后父")]),t._v(" "),s("li",[t._v("destroy组件消亡是先子后父")])]),t._v(" "),s("h2",{attrs:{id:"vue事件绑定原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue事件绑定原理"}},[t._v("#")]),t._v(" vue事件绑定原理")]),t._v(" "),s("p",[t._v("原生时间是通过addEventListener\n组件上的事件是通过$on修饰符， 如果想添加原生时间需要➕.native。将其绑定在子元素html元素上，变成原生事件")]),t._v(" "),s("h2",{attrs:{id:"vue-router钩子函数-执行顺序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-router钩子函数-执行顺序"}},[t._v("#")]),t._v(" vue-router钩子函数，执行顺序")]),t._v(" "),s("h3",{attrs:{id:"全局守卫"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#全局守卫"}},[t._v("#")]),t._v(" 全局守卫")]),t._v(" "),s("ul",[s("li",[t._v("beforeEach 每次路由进入前执行的函数")]),t._v(" "),s("li",[t._v("afterEach 每次路由进入之后执行的函数")]),t._v(" "),s("li",[t._v("beforeResolve 全局解析守卫")])]),t._v(" "),s("h3",{attrs:{id:"路由守卫"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#路由守卫"}},[t._v("#")]),t._v(" 路由守卫，")]),t._v(" "),s("ul",[s("li",[t._v("beforeEnter 指定路由进入前的函数")]),t._v(" "),s("li",[t._v("beforeLeave 指定路由离开前的函数")])]),t._v(" "),s("h3",{attrs:{id:"组件守卫"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#组件守卫"}},[t._v("#")]),t._v(" 组件守卫")]),t._v(" "),s("ul",[s("li",[t._v("beforeRouterEnter 组件内路由进入前的函数")]),t._v(" "),s("li",[t._v("beforeRouterLeave 组件内路由离开前的函数")]),t._v(" "),s("li",[t._v("beforeRouterUpdate 组件内路由更新的函数")])]),t._v(" "),s("h3",{attrs:{id:"当点击切换路由时"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#当点击切换路由时"}},[t._v("#")]),t._v(" 当点击切换路由时")]),t._v(" "),s("p",[t._v("beforeRouterLeave=>beforeEach=>beforeEnter=>beforeRouteEnter=>beforeResolve=>afterEach=>beforeRouteEnter")]),t._v(" "),s("h2",{attrs:{id:"vue函数式组件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue函数式组件"}},[t._v("#")]),t._v(" vue函数式组件")]),t._v(" "),s("ul",[s("li",[t._v("开启方式：functional:true")]),t._v(" "),s("li",[t._v("不需要实例化，函数组件没有this，this死通过render函数的第二个参数context来代替的")]),t._v(" "),s("li",[t._v("没有生命周期。不能使用计算属性watch。")]),t._v(" "),s("li",[t._v("不能同$emit暴露事件，调用时间只能通过context.listeners.click的方式调用外部传入的事件")])]),t._v(" "),s("h3",{attrs:{id:"函数式组件的优点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数式组件的优点"}},[t._v("#")]),t._v(" 函数式组件的优点")]),t._v(" "),s("ul",[s("li",[t._v("不需要实例化，无状态，没有生命周期，渲染性能要好于普通组件")]),t._v(" "),s("li",[t._v("结构比较简单，代码比较清晰")])]),t._v(" "),s("h2",{attrs:{id:"vue性能优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue性能优化"}},[t._v("#")]),t._v(" vue性能优化")]),t._v(" "),s("ul",[s("li",[t._v("响应式数据不需要使用的只做为展示的，可以使用object.freeze（）进行冻结")]),t._v(" "),s("li",[t._v("合理使用v-if v-show。频繁切换用v-show 不频繁使用v-if")]),t._v(" "),s("li",[t._v("v-for遍历少使用index，最好使用id值")]),t._v(" "),s("li",[t._v("大数据列表使用虚拟列表，虚拟表格")]),t._v(" "),s("li",[t._v("组件销毁后要把全局变量和实践销毁")]),t._v(" "),s("li",[t._v("图片懒加载，路由懒加载")]),t._v(" "),s("li",[t._v("第三方插件比如element-UI 按需引入")]),t._v(" "),s("li",[t._v("适当采用keepalive缓存组件")]),t._v(" "),s("li",[t._v("防抖节流用起来")]),t._v(" "),s("li",[t._v("服务端渲染ssr, 预渲染")])]),t._v(" "),s("h2",{attrs:{id:"webpack层面优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#webpack层面优化"}},[t._v("#")]),t._v(" webpack层面优化：")]),t._v(" "),s("ul",[s("li",[t._v("对图片进行压缩")]),t._v(" "),s("li",[t._v("提取公共代码 commonsChunkPlugin")]),t._v(" "),s("li",[t._v("提取组件css")]),t._v(" "),s("li",[t._v("优化sourceMap")]),t._v(" "),s("li",[t._v("构建结果输出分析，利webpack-bundle-analyzer")]),t._v(" "),s("li",[t._v("打包优化")]),t._v(" "),s("li",[t._v("压缩代码")]),t._v(" "),s("li",[t._v("treeshaking")]),t._v(" "),s("li",[t._v("seo优化")]),t._v(" "),s("li",[t._v("预渲染")]),t._v(" "),s("li",[t._v("服务端渲染 SSR")]),t._v(" "),s("li",[t._v("Happypack 多线程打包")]),t._v(" "),s("li",[t._v("抽离公共组件")]),t._v(" "),s("li",[t._v("soureMap优化")]),t._v(" "),s("li",[t._v("Vue 的SPA页面如何优化加载速度")]),t._v(" "),s("li",[t._v("减少入口文件体积")]),t._v(" "),s("li",[t._v("静态资源本地缓存")]),t._v(" "),s("li",[t._v("开启GZIP压缩")]),t._v(" "),s("li",[t._v("使用SSR.nuxt.js")])]),t._v(" "),s("h2",{attrs:{id:"mixin混合使用场景和原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mixin混合使用场景和原理"}},[t._v("#")]),t._v(" mixin混合使用场景和原理")]),t._v(" "),s("h3",{attrs:{id:"作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#作用"}},[t._v("#")]),t._v(" 作用：")]),t._v(" "),s("p",[t._v("分发vue组件中可服用的功能，提取相似代码")]),t._v(" "),s("h3",{attrs:{id:"原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原理"}},[t._v("#")]),t._v(" 原理：")]),t._v(" "),s("p",[t._v("merOptions,类似于对象的继承，当组件初始化的时候会调用mergeOptions方法进行合并。当组件和混入对象含有相同名选项时，以恰当的方式进")]),t._v(" "),s("h4",{attrs:{id:"mergeoptions方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mergeoptions方法"}},[t._v("#")]),t._v(" mergeOptions方法：")]),t._v(" "),s("p",[t._v("步骤：\n先递归处理mixin，合并parent中的key,调用mergeField方法进行合并，保存在变量options中，在遍历child，不上parent中没有的key，\n调用mergefield方法进行合并，并保存变量在options中，最后将options返回")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mergeOptions")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("parent")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("child")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\nvm"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Component")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Object "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("child"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mixins"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 判断有没有mixin 有的话递归进行合并")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" l "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" child"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mixins"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" l"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\nparent "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mergeOptions")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("parent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" child"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mixins"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" vm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" options "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" key\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" parent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mergeField")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 先遍历parent的key")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" child"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasOwn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("parent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果parent已经处理过某个key 就不处理了")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mergeField")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 处理child中的key 也就parent中没有处理过的key")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mergeField")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("key")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" strat "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" strats"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" defaultStrat\noptions"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("strat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("parent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" child"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" vm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 根据不同类型的options调用strats中不同的方法进行合并")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" options\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"vue-extend-作用及原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-extend-作用及原理"}},[t._v("#")]),t._v(" Vue.extend 作用及原理")]),t._v(" "),s("p",[t._v("使用Vue基础构造器，创建一个子类，参数是一个包涵组件选项的对象,该方法返回一个与Vue具有相同功能的构造函数")]),t._v(" "),s("h3",{attrs:{id:"原理-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原理-2"}},[t._v("#")]),t._v(" 原理：")]),t._v(" "),s("p",[t._v("核心思路是新建一个VueCommponent构造函数，命名为sub,通过将VueCommponent的原型指向Vue的构造函数的原型方式继承Vue构造函数上所有")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("Vue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("extend")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nSuber "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v("\nVueCommponent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("protoType "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Super")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"与mixin的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#与mixin的区别"}},[t._v("#")]),t._v(" 与mixin的区别：")]),t._v(" "),s("p",[t._v("mixin是对vue options进行混入，所有的vue实例对象都会具备混入进来的配置行为\nextend是产生一个继承自Vue类的子类，只会影响这个子类的实例对象，不会对vue类本身以及Vue类的实例对象产生影响")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("简单创造一个子类\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建构造器。js文件")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Vue "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vue'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" Profile "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Vue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("extend")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("template")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'<p v-on:click=\"workclick\">{{firstName}} {{lastName}} aka {{alias}}111111</p>'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("data")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("firstName")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Walter'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("lastName")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'White'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("alias")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Heisenberg'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("methods")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("workclick")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'我执行了'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" Profile\n组件内应用：\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Profile "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" '@"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("components"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("Exetend’\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mounted")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Profile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("$mount")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#mount-point'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"双向数据绑定的原理-v-model"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#双向数据绑定的原理-v-model"}},[t._v("#")]),t._v(" 双向数据绑定的原理 v-model")]),t._v(" "),s("p",[t._v("v-model本质是语法糖，v-model在内部为不同的输入元素使用不同的属性抛出不同的事件\ninput+textarea：value：data里的值， 触发事件： input = $event.target.value\nCheckbox+radio 使用checked和change事件\nselect采用 prop和change事件")]),t._v(" "),s("h2",{attrs:{id:"keepalive-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#keepalive-2"}},[t._v("#")]),t._v(" keepalive")]),t._v(" "),s("p",[t._v("https://segmentfault.com/a/1190000011978825")]),t._v(" "),s("p",[t._v("缓存组件的功能。避免多次加载相应的组件，消耗性能，能够将不活动的组件，保存在内存中， 而不是直接销毁，是一个抽象组件，不会渲染到")]),t._v(" "),s("h3",{attrs:{id:"两个生命周期"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#两个生命周期"}},[t._v("#")]),t._v(" 两个生命周期：")]),t._v(" "),s("ul",[s("li",[t._v("Activated :激活的时候调用")]),t._v(" "),s("li",[t._v("Deactivated：停用时调用")])]),t._v(" "),s("h3",{attrs:{id:"提供两个属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#提供两个属性"}},[t._v("#")]),t._v(" 提供两个属性：")]),t._v(" "),s("ul",[s("li",[t._v("include：需要缓存的组件")]),t._v(" "),s("li",[t._v("exclude：不需要缓存的组件")])]),t._v(" "),s("h3",{attrs:{id:"原理-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原理-3"}},[t._v("#")]),t._v(" 原理：")]),t._v(" "),s("p",[t._v("运用LRU原理\n选择最近最久未使用的组件予以淘汰。")]),t._v(" "),s("h4",{attrs:{id:"lru算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#lru算法"}},[t._v("#")]),t._v(" LRU算法：")]),t._v(" "),s("p",[t._v("最新数据插入数组末尾，命中缓存的数据也插入到数组末尾，当数组满了，删除头部的数据。")]),t._v(" "),s("p",[t._v("kee-alive的缓存，是基于VNode节点而不是直接储存dom结构，本质是将需要缓存的VNode缓存在this.catch中，在render的时候如果VNode的name符合在缓存条件（include和exclude）。则会从this.catch中取出之前的VNode实例进行渲染\n缓存在creaeted钩子创建一个缓存容器。保存Vnode节点，在destoryed组件中进行销毁组件实例 ，watch对include和exclude进行监视，被修改的时候对cache进行修正。render对vnode进行节点的缓存")]),t._v(" "),s("h2",{attrs:{id:"vue-use-使用一个插件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-use-使用一个插件"}},[t._v("#")]),t._v(" vue.use 使用一个插件")]),t._v(" "),s("p",[t._v("https://www.jianshu.com/p/0b8b6f2e5a82\nhttps://blog.csdn.net/ZYS10000/article/details/107246076/\n使用时必须传入一个Objecthuo或者Fuction，如果是Object必须有install对象，如果是函数，那么这个函数会被当成是install方法。\n当Vue.ues执行的时候，第一个参数是vue,其他参数是vue.use执行的其他参数\n当使用Vue.use()的时候会默认执行install方法。\n简单使用：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" App "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./App.vue'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" plugn "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nVue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("use")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("plugn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h2",{attrs:{id:"vue修饰符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue修饰符"}},[t._v("#")]),t._v(" vue修饰符")]),t._v(" "),s("p",[t._v(".stop 阻止事件冒泡\nPrevent 阻止事件默认行为\nonce 只触发一次\nSelf 只有触发自己的事件时才会执行")]),t._v(" "),s("h2",{attrs:{id:"nexttick原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nexttick原理"}},[t._v("#")]),t._v(" nextTick原理")]),t._v(" "),s("p",[t._v("理解：主要是思路是采用微任务优先的方式调用异步方法去执行nextTick包装的方法。\n使用顺序：")]),t._v(" "),s("ul",[s("li",[t._v("promise.then")]),t._v(" "),s("li",[t._v("mutationObserver")]),t._v(" "),s("li",[t._v("setImmediate setTimeout\nmutationObserver：监听dom变化")])]),t._v(" "),s("h2",{attrs:{id:"vue模版编译原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue模版编译原理"}},[t._v("#")]),t._v(" vue模版编译原理")]),t._v(" "),s("p",[t._v("简单：")]),t._v(" "),s("ul",[s("li",[t._v("vue模版编译的原理就是将template转化为render函数的过程\n阶段：https://segmentfault.com/a/1190000013763590")]),t._v(" "),s("li",[t._v("生成AST树 (解析器)（抽象语法树（AST） https://blog.csdn.net/huangpb123/article/details/84799198\n优化 （优化器）\ncodegen（代码生成器）")])]),t._v(" "),s("ol",[s("li",[t._v("将模版字符串转换为element ASTs (解析器)")]),t._v(" "),s("li",[t._v("递归对AST进行静态节点标记，主要用来做虚拟DOM的渲染优化（优化器）\n静态节点主要是指那些不需要发生变化的dom节点，包括静态节点和静态根结点（里面的子元素都是静态节点）。比如纯文本，< p>我是静态节\n静态节点标注好处：dom更新时可以被跳过，更新时不需要为其创建新节点")]),t._v(" "),s("li",[t._v("使用element ASTs 生成render函数代码字符串 （代码生成器）")])]),t._v(" "),s("h2",{attrs:{id:"vue指令的原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue指令的原理"}},[t._v("#")]),t._v(" vue指令的原理")]),t._v(" "),s("p",[t._v("1、在生成ast语法树的时候，遇到指令会给当前的元素添加directives属性；\n2、通过 genDirectives 生成指令代码\n3、在 patch 前将指令的钩子提取到 cbs 中，在 patch 过程中调用对应的钩子。\n4、当执行指令对应钩子函数时，调用对应指令定义方法。")]),t._v(" "),s("h2",{attrs:{id:"vue-set-原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-set-原理"}},[t._v("#")]),t._v(" vue.$set（）原理")]),t._v(" "),s("p",[t._v("Vue响应式原理两种情况修改vue不会触发视图的更新：")]),t._v(" "),s("ol",[s("li",[t._v("新增一个对象内的响应式数据")]),t._v(" "),s("li",[t._v("更改数组下标来修改数组的值")])]),t._v(" "),s("h3",{attrs:{id:"vue-set-原理-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-set-原理-2"}},[t._v("#")]),t._v(" Vue.set()原理：")]),t._v(" "),s("p",[t._v("响应式数据，会给对象和数组本身新增__ob__属性，代表的是Observer实例，当给对象新增不存在的属性时，$set（）首先会把新的属性进行响应式跟踪，然后后触发对象__ob__的dep收集到的watcher去更新，修改数组索引时我们调用数组本身的splice方法去更新数组")]),t._v(" "),s("h2",{attrs:{id:"vue-router"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-router"}},[t._v("#")]),t._v(" vue-router")]),t._v(" "),s("p",[t._v("模式前端路由存在的意义： 改变视图的同时不会向后端发出请求")]),t._v(" "),s("h3",{attrs:{id:"hash模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hash模式"}},[t._v("#")]),t._v(" hash模式")]),t._v(" "),s("p",[t._v("原理： onhashchange事件，可以在window上监听这个事件\n特点：")]),t._v(" "),s("ul",[s("li",[t._v("有#号")]),t._v(" "),s("li",[t._v("不会向服务端发起请求。改变hash不会重新加载页面")])]),t._v(" "),s("h3",{attrs:{id:"history模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#history模式"}},[t._v("#")]),t._v(" history模式")]),t._v(" "),s("p",[t._v("h5新增的pushStatus ()和replaceStatus()方法")]),t._v(" "),s("h4",{attrs:{id:"刷新会-404"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#刷新会-404"}},[t._v("#")]),t._v(" 刷新会 404")]),t._v(" "),s("p",[t._v("因为刷新会重新请求服务器 ，后台需要配置重定向到index.HTML页面（后端或者Nginx中进行简单配置）")]),t._v(" "),s("h2",{attrs:{id:"虚拟dom的优缺点缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#虚拟dom的优缺点缺点"}},[t._v("#")]),t._v(" 虚拟dom的优缺点缺点")]),t._v(" "),s("p",[t._v("首次大量渲染dom时， 多了一层虚拟dom的计算，回避innerHTML插入慢\n好处：")]),t._v(" "),s("ul",[s("li",[t._v("减少了dom操作，减少了重绘和回流")]),t._v(" "),s("li",[t._v("保证性能下限，虽然不是最佳的性能，但具备局部更新的能力，比直接操作dom性能高")])]),t._v(" "),s("h2",{attrs:{id:"diff算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#diff算法"}},[t._v("#")]),t._v(" diff算法")]),t._v(" "),s("p",[t._v("当需要更新dom的时候，将需要更新的dom生成新的VNode，再将新的VNode和旧的VNode通过patch函数进行对比，更新并替换新旧VNode，并对真实dom打补丁操作")]),t._v(" "),s("h2",{attrs:{id:"key的作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#key的作用"}},[t._v("#")]),t._v(" key的作用")]),t._v(" "),s("p",[t._v("主要应用于虚拟dom中，vue通过对比新旧节点的key，来判断节点是否改变，用key可以提高渲染效率，更搞笑的操作虚拟dom")]),t._v(" "),s("h2",{attrs:{id:"组件传递方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#组件传递方式"}},[t._v("#")]),t._v(" 组件传递方式")]),t._v(" "),s("h3",{attrs:{id:"父子"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#父子"}},[t._v("#")]),t._v(" 父子：")]),t._v(" "),s("ul",[s("li",[t._v("props")]),t._v(" "),s("li",[t._v("$attrs $listenners")]),t._v(" "),s("li",[t._v("$children $parent")]),t._v(" "),s("li",[t._v("$refs")]),t._v(" "),s("li",[t._v("slot-scope 父组件享受子组件的作用域")]),t._v(" "),s("li",[t._v(".sync")])]),t._v(" "),s("h3",{attrs:{id:"祖孙"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#祖孙"}},[t._v("#")]),t._v(" 祖孙：")]),t._v(" "),s("ul",[s("li",[t._v("provide inject")])]),t._v(" "),s("h3",{attrs:{id:"兄弟"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#兄弟"}},[t._v("#")]),t._v(" 兄弟")]),t._v(" "),s("ul",[s("li",[t._v("eventBUS")]),t._v(" "),s("li",[t._v("$emit 触发事件")]),t._v(" "),s("li",[t._v("$on 绑定事件函数")]),t._v(" "),s("li",[t._v("vuex")])]),t._v(" "),s("h2",{attrs:{id:"v-html会造成什么问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#v-html会造成什么问题"}},[t._v("#")]),t._v(" v-html会造成什么问题")]),t._v(" "),s("p",[t._v("可能会造成xss（跨站脚本攻击，攻击者嵌入恶意脚本代码到正常用户会访问的页面中）攻击\nv-html会替换掉子标签")]),t._v(" "),s("h2",{attrs:{id:"mvc-mvvm-区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mvc-mvvm-区别"}},[t._v("#")]),t._v(" mvc mvvm 区别")]),t._v(" "),s("ul",[s("li",[t._v("mvc思想：\n一句话描述就是controller负责将数据用view显示出来。controller将model的数据赋值给了view")]),t._v(" "),s("li",[t._v("mvvm:\n通过vm做了数据绑定，将模型转换为视图，将视图转换为模型（实现方式：dom事件监听）")]),t._v(" "),s("li",[t._v("区别：\n实现了view和model的自动同步，当model属性改变时，不用再手动操作dom元素来改变view的展示，而是改变数据之后对于的view会自动改变。")])]),t._v(" "),s("h2",{attrs:{id:"vue的内置指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue的内置指令"}},[t._v("#")]),t._v(" vue的内置指令")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("v-once: 定义他的元素或者组件只渲染一次，包括元素或组件的所有子节点，首次渲染后不再随数据的变化重新渲染，被视为静态内容")])]),t._v(" "),s("li",[s("p",[t._v("v-cloak :保持在元素上直到关联实例结束编译，解决初始化慢导致页面闪动最佳实践")])]),t._v(" "),s("li",[s("p",[t._v("v-bind： 动态更新html伤的元素属性")])]),t._v(" "),s("li",[s("p",[t._v("v-on： 监听dom事件")])]),t._v(" "),s("li",[s("p",[t._v("v-html：赋值变量给html 注意xss攻击")])]),t._v(" "),s("li",[s("p",[t._v("v-text：更新元素的textContent")])]),t._v(" "),s("li",[s("p",[t._v("v-model:ni")])]),t._v(" "),s("li",[s("p",[t._v("v-if/v-else-if/v-else： 判断")])]),t._v(" "),s("li",[s("p",[t._v("v-show：元素的显示隐藏 display")])]),t._v(" "),s("li",[s("p",[t._v("v-for：循环指令")])]),t._v(" "),s("li",[s("p",[t._v("v-pre： 跳过这个元素以及子元素的编译过程，以此来加快整个项目的编译速度")])])]),t._v(" "),s("h2",{attrs:{id:"虚拟dom的优缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#虚拟dom的优缺点"}},[t._v("#")]),t._v(" 虚拟dom的优缺点：")]),t._v(" "),s("p",[t._v("为什么用虚拟dom: 在浏览器中操作dom是很昂贵的，频繁操作dom，会产生一定的性能问题，这就是虚拟dom的产生原因，vue2借助了snabbdom的实现，用一个js对象去描述dom\n是对真实dom的一种抽象\n优点：\n*.保证性能的下线,比直接粗暴的操作dom性能要好得多")]),t._v(" "),s("ul",[s("li",[t._v("无需手动操作dom 框架会根据虚拟dom和数据双向绑定，帮助我们更新视图")]),t._v(" "),s("li",[t._v("跨平台。虚拟dom本质是JavaScript对象，虚拟dom可以更加方便的进行跨平台操作，例如服务端渲染等\n缺点：")]),t._v(" "),s("li",[t._v("无法进行极致优化，")]),t._v(" "),s("li",[t._v("首次渲染，由于有多一层的diff算法，所以会比innerHTML插入要慢")])]),t._v(" "),s("h2",{attrs:{id:"数据响应式和双向数据绑定的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据响应式和双向数据绑定的区别"}},[t._v("#")]),t._v(" 数据响应式和双向数据绑定的区别")]),t._v(" "),s("p",[t._v("响应式原理：单向数据 数据流向视图，通过object。definePropety()\n双向数据绑定：通过value和绑定的事件去修改value值来修改的")]),t._v(" "),s("h2",{attrs:{id:"spa-单页面-的优缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spa-单页面-的优缺点"}},[t._v("#")]),t._v(" SPA（单页面）的优缺点：")]),t._v(" "),s("p",[t._v("优点：")]),t._v(" "),s("ol",[s("li",[t._v("加载快，用户感觉不到，交互体验好")]),t._v(" "),s("li",[t._v("前后端分离 ，不需要请求服务器就可以刷新数据")]),t._v(" "),s("li",[t._v("减轻服务器压力\n缺点：\n1.不利于seo优化\n2.首屏加载慢\n3.不适合大型开发项目")])]),t._v(" "),s("h2",{attrs:{id:"为什么单页面首频加载慢"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么单页面首频加载慢"}},[t._v("#")]),t._v(" 为什么单页面首频加载慢？")]),t._v(" "),s("p",[t._v("因为第一次要把所有的页面组件内容下载下来\n解决方案：")]),t._v(" "),s("ol",[s("li",[t._v("懒加载，通过脚手架配置\n将每个文件打包成独立的文件， 首频加载的时候只加载首屏的文件， 点击其他页面再去加载其他页面的文件")]),t._v(" "),s("li",[t._v("异步延迟加载\n打包时，每个文件单独打包， 首屏加载时只加载第一个组件内容，后续组件异步加载（底层程序）")]),t._v(" "),s("li",[t._v("静态资源本地缓存\n4.图片资源 压缩\n5.GZIP压缩")]),t._v(" "),s("li",[t._v("使用ssr 客户端渲染 我们用的就是这个 nuxt.js\n7.ui组件库按需加载\n8.减少入口文件体积 treeshaking")])]),t._v(" "),s("h2",{attrs:{id:"路由懒加载的几种方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#路由懒加载的几种方式"}},[t._v("#")]),t._v(" 路由懒加载的几种方式")]),t._v(" "),s("p",[t._v("1.vue异步组件：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("component")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("xxx"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("resolve"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("2.路由懒加载 import（）函数")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("componen\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("Home")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("webpackChunkName"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("xxx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@/component/index.js'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("这里可以配置webpackchunkName 将文件打包到一个js文件\n3.webpack提供的require.ensure()")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/home'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'home'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("component")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("r")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v("require"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ensure")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("r")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@/components/index'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'demo'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);