(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{436:function(t,e,a){"use strict";a.r(e);var s=a(65),v=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"浏览器环境规格"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器环境规格"}},[t._v("#")]),t._v(" 浏览器环境规格")]),t._v(" "),a("h3",{attrs:{id:"window"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#window"}},[t._v("#")]),t._v(" window")]),t._v(" "),a("ul",[a("li",[t._v("是JavaScript代码的全局对象")]),t._v(" "),a("li",[t._v("代表了浏览器窗口，并提供了控制它的方法")])]),t._v(" "),a("h3",{attrs:{id:"文档对象模型-dom"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文档对象模型-dom"}},[t._v("#")]),t._v(" 文档对象模型 （DOM)")]),t._v(" "),a("ul",[a("li",[t._v("将所有页面内容表示为可修改的对象，document对象是页面的主要“入口点”，我们可以使用它来更改或者创建页面上的任何内容")]),t._v(" "),a("li",[t._v("DOM不仅仅用于浏览器，有的非浏览器的设备也是用dom")])]),t._v(" "),a("h3",{attrs:{id:"浏览器对象模型-bom"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器对象模型-bom"}},[t._v("#")]),t._v(" 浏览器对象模型 BOM")]),t._v(" "),a("p",[t._v("表示由浏览器（主机环境）提供的用于处理文档、（document）之外的内容的其他对象")]),t._v(" "),a("ul",[a("li",[t._v("navigator提供了有关浏览器和操作系统的背景信息")]),t._v(" "),a("li",[t._v("locatiion对象允许我们读取当前URL, 并可以将浏览器定向到新的url")]),t._v(" "),a("li",[t._v("alert ,confirm,prompt 也是BOM一部分，代表与用户通信的纯浏览器方法")])]),t._v(" "),a("h3",{attrs:{id:"dom树"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dom树"}},[t._v("#")]),t._v(" DOM树")]),t._v(" "),a("ul",[a("li",[t._v("HTML文档的主干是标签")]),t._v(" "),a("li",[t._v("每一个HTML标签都是要一个对象， 嵌套的标签是闭合标签的“子标签 （children）”。文本也是一个对象")])]),t._v(" "),a("h3",{attrs:{id:"dom树结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dom树结构"}},[t._v("#")]),t._v(" DOM树结构")]),t._v(" "),a("ul",[a("li",[t._v("标签被称为元素节点")]),t._v(" "),a("li",[t._v("文本节点text：元素内的文本")]),t._v(" "),a("li",[t._v("注释comment--也会成为DOM的一部分")])]),t._v(" "),a("h3",{attrs:{id:"浏览器的自动修正"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器的自动修正"}},[t._v("#")]),t._v(" 浏览器的自动修正")]),t._v(" "),a("ul",[a("li",[t._v("文件中只有一个单词，浏览器会把他包装到html和body中，并且添加head")]),t._v(" "),a("li",[t._v("没有关闭的标签，浏览器会再读取标签是填补缺失的部分")])]),t._v(" "),a("h2",{attrs:{id:"遍历dom"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#遍历dom"}},[t._v("#")]),t._v(" 遍历DOM")]),t._v(" "),a("ul",[a("li",[t._v("< html > = document.documentElement")]),t._v(" "),a("li",[t._v("< body > = document.body")]),t._v(" "),a("li",[t._v("< head > = document.head\n"),a("strong",[t._v("body的值可能是null，脚本在head中的情况，脚本访问不到document.body")])]),t._v(" "),a("li",[t._v("在document世界中， null==不存在")])]),t._v(" "),a("h3",{attrs:{id:"子节点childnodes-fristchild-lastchild"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#子节点childnodes-fristchild-lastchild"}},[t._v("#")]),t._v(" 子节点childNodes，fristChild，lastChild")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("子节点： 对应的是直系的子元素， 完全被嵌套在给定的元素中")])]),t._v(" "),a("li",[a("p",[t._v("子孙元素： 嵌套在给定元素中的所有元素，包括子元素，以及子元素的子元素等")])]),t._v(" "),a("li",[a("p",[t._v("childNodes是一个集合，列出了所有的子节点， 包括文本节点")])]),t._v(" "),a("li",[a("p",[t._v("firstChild和lastchild属性是访问第一个和最后一个子元素")])]),t._v(" "),a("li",[a("p",[t._v("hasChildNodes检查节点是否有子节点 返回值 ：true、false")])])]),t._v(" "),a("h3",{attrs:{id:"dom集合"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dom集合"}},[t._v("#")]),t._v(" DOM集合")]),t._v(" "),a("ul",[a("li",[t._v("childNodes 是一个集合，并不是一个数组")]),t._v(" "),a("li",[t._v("可以使用for...of 循环，因为集合是可迭代的，提供了所需要的的Symbol.interator属性")]),t._v(" "),a("li",[t._v("无法使用数组的方法，因为不是数组，需要使用数组的方法 请使用 Array.from（）转换为真数组")]),t._v(" "),a("li",[t._v("DOM集合是刻度的，不能使用childNodes[i ]去替换子节点")]),t._v(" "),a("li",[t._v("DOM集合是实时的")]),t._v(" "),a("li",[t._v("不要使用for...in来遍历集合")])]),t._v(" "),a("h3",{attrs:{id:"兄弟节点和父节点-不单指元素节点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#兄弟节点和父节点-不单指元素节点"}},[t._v("#")]),t._v(" 兄弟节点和父节点（不单指元素节点）")]),t._v(" "),a("ul",[a("li",[t._v("兄弟节点是指同一个父节点的节点 下一个兄弟节点： nextSibing，上一个：perviousSibling")]),t._v(" "),a("li",[t._v("父节点：parentNode")])]),t._v(" "),a("h3",{attrs:{id:"纯元素节点-仅指元素节点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#纯元素节点-仅指元素节点"}},[t._v("#")]),t._v(" 纯元素节点 （仅指元素节点）")]),t._v(" "),a("ul",[a("li",[t._v("元素节点的子带节点： children")]),t._v(" "),a("li",[t._v("第一个子元素节点：firstElementChild")]),t._v(" "),a("li",[t._v("最后一个子元素节点： lastElementChild")]),t._v(" "),a("li",[t._v("兄弟元素节点：下一个： nextElementSibling，上一个：perviousElementSibling")]),t._v(" "),a("li",[t._v("父元素节点：parentElement")])]),t._v(" "),a("p",[a("strong",[t._v("一般parentNode和parentElement属性通常是一样的：获取父节点。")]),t._v("\n唯一例外：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("documentElement"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parentNode "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// document")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("documentElement"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parentElement "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// null")]),t._v("\n")])])]),a("h3",{attrs:{id:"表格元素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#表格元素"}},[t._v("#")]),t._v(" 表格元素")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" table"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rows 获取表格行组成的集合 可使用 table"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rows"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("获取\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" table"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("caption"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("tHead"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("tFoot — 引用元素 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" caption"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("，"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" thead"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("，"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" tfoot"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("。\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" thead，tbody"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("tfoot元素提供了rows属性\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" tbody"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rows表格内部tr合集\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" tr\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" tr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cells — 在给定 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("tr"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 中的 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("td"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 和 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("th"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 单元格的集合。\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" tr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sectionRowIndex — 给定的 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("tr"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 在封闭的 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("thead"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("tbody"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("tfoot"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 中的位置（索引）。\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" tr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rowIndex — 在整个表格中 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("tr"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 的编号（包括表格的所有行）\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" td和th\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" td"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cellIndex 封闭tr中单元格的编号\n")])])]),a("h2",{attrs:{id:"精准搜索"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#精准搜索"}},[t._v("#")]),t._v(" 精准搜索")]),t._v(" "),a("ul",[a("li",[t._v("document.getelementById(css) 或者直接使用id\nPS:直接使用id。如果有js赋值的情况下，优先js(一般不用这个)")]),t._v(" "),a("li",[t._v("elem.querySelectAll(css)，最通用方法,返回给定element中与给定css选择器匹配的所有元素（合集）\n"),a("ul",[a("li",[t._v("适配任何选择器")]),t._v(" "),a("li",[t._v("可以使用伪类")])])]),t._v(" "),a("li",[t._v("elem.querySelector(css) 调用返回选择器选择的第一个元素")]),t._v(" "),a("li",[t._v("elem.matches（css） 检查elem是否与给定的CSS选择器匹配，返回值 true/false")]),t._v(" "),a("li",[t._v("elem.closest(selector) 查找与css选择器匹配的最近的祖先")]),t._v(" "),a("li",[t._v("getElementsBy*\n"),a("ul",[a("li",[t._v("getElementsByTagName(tag) 查找具有给定标签的元素，并返回他们的集合， tag参数可以是 “*”")]),t._v(" "),a("li",[t._v("ele.getElementsByClassName(classname) 返回具有给定class类的元素")]),t._v(" "),a("li",[t._v("ele.getElementsByName（name) 返回在文档范围内具有给定name特征的元素")]),t._v(" "),a("li",[t._v("以上都返回一个集合")]),t._v(" "),a("li",[t._v("以上都是elements不是element")]),t._v(" "),a("li",[t._v("实时的集合\n*"),a("em",[t._v("与querySelectAll的区别是 querySelectAll是静态的集合，而getElementsBy "),a("em",[t._v("是动态的")])])])])])]),t._v(" "),a("h2",{attrs:{id:"节点属性-type-tag-content"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#节点属性-type-tag-content"}},[t._v("#")]),t._v(" 节点属性：type，tag,content")]),t._v(" "),a("h3",{attrs:{id:"dom节点类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dom节点类"}},[t._v("#")]),t._v(" DOM节点类")]),t._v(" "),a("ul",[a("li",[t._v("EventTarget 类---根抽象类，作为让所有DOM节点都支持事件")]),t._v(" "),a("li",[t._v("Node ----抽象类，充当DOM节点的基础， 提供树的核心")]),t._v(" "),a("li",[t._v("Element ---DOM元素的基本类，提供了元素记得导航")]),t._v(" "),a("li",[t._v("HTMLElement ---所有HTML元素的基本类，各种HTML元素均继承自他\n"),a("ul",[a("li",[t._v("HTMLInputElement")]),t._v(" "),a("li",[t._v("HTMLBodyElement")]),t._v(" "),a("li",[t._v("HTMLAnchorElement\n"),a("strong",[t._v("节点的全部属性和方法都是继承的结果")]),t._v("\nDOM节点是常规的JavaScript对象，他们使用基于原型的类进行继承\nbody==>HTMLBodyElement==>HTMLElement ==>Element ==>Node==> EventTarget ==>Object")])])])]),t._v(" "),a("h3",{attrs:{id:"nodetype属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nodetype属性"}},[t._v("#")]),t._v(" nodeType属性")]),t._v(" "),a("ul",[a("li",[t._v("ele.nodeType==1 元素节点")]),t._v(" "),a("li",[t._v("ele.nodeType==3 文本节点")]),t._v(" "),a("li",[t._v("ele.nodeType==9 document对象")]),t._v(" "),a("li",[t._v("只能读取 不能修改")])]),t._v(" "),a("h3",{attrs:{id:"标签-nodename-tagname"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#标签-nodename-tagname"}},[t._v("#")]),t._v(" 标签 nodeName/tagName")]),t._v(" "),a("ul",[a("li",[t._v("tagName属性仅适用于element节点")]),t._v(" "),a("li",[t._v("nodeName是为任意Node定义的\n"),a("ul",[a("li",[t._v("对于元素与tagName一样")]),t._v(" "),a("li",[t._v("其他节点类型 有对于节点类型的字符串")])])]),t._v(" "),a("li",[t._v("如果在元素节点上使用。两者没有区别")]),t._v(" "),a("li",[t._v("标签名始终大写")])]),t._v(" "),a("h3",{attrs:{id:"innerhtml"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#innerhtml"}},[t._v("#")]),t._v(" innerHTML")]),t._v(" "),a("ul",[a("li",[t._v("允许将匀速中的HTML获取为字符串的形式")]),t._v(" "),a("li",[t._v("也可以修改塔")]),t._v(" "),a("li",[t._v("使用innerHTML插入script标签。脚本不会执行")]),t._v(" "),a("li",[t._v("innerHTML += 会进行完全的重写")]),t._v(" "),a("li",[t._v("innerHTML+=做的工作：移出旧的内容，添加新的innerHTML\n因为内容已“归零”并从头开始重写，因此所有的图片和其他资源都将重写加载。")])]),t._v(" "),a("h3",{attrs:{id:"outerhtml-元素完成html"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#outerhtml-元素完成html"}},[t._v("#")]),t._v(" outerHTML：元素完成html")]),t._v(" "),a("ul",[a("li",[t._v("读取时返回包含元素的完整HTML")]),t._v(" "),a("li",[t._v("写入时： 不会改变元素，直接替换他")]),t._v(" "),a("li",[t._v("赋值不会修改DOM元素，而是将其从DOM中删除并在其位置插入新的HTML")])]),t._v(" "),a("h3",{attrs:{id:"nodevalue、data"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nodevalue、data"}},[t._v("#")]),t._v(" nodevalue、data")]),t._v(" "),a("p",[t._v("获取文本节点的内容")]),t._v(" "),a("ul",[a("li",[t._v("textContent :读取或者纯文本,提供了对元素内的文本访问权限，仅文本， 去掉所有< tag >\n"),a("ul",[a("li",[t._v("和innerHTML对比:  使用in呢人HTML我们将其作为HTML插入， 带有所有HTML标签")]),t._v(" "),a("li",[t._v("textContent:将其作为文本插入， 所有符号均按字面意义处理。（比较安全）")])])])]),t._v(" "),a("h3",{attrs:{id:"hidden属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hidden属性"}},[t._v("#")]),t._v(" hidden属性")]),t._v(" "),a("p",[t._v("指定DOM元素是否可见")]),t._v(" "),a("ul",[a("li",[t._v("与display：none；做的事情相同")])]),t._v(" "),a("h3",{attrs:{id:"其他"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他"}},[t._v("#")]),t._v(" 其他：")]),t._v(" "),a("ul",[a("li",[t._v("value < input>")]),t._v(" "),a("li",[t._v("href < a>")]),t._v(" "),a("li",[t._v("id")])]),t._v(" "),a("h3",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("ul",[a("li",[t._v("每一个DOM节点都是一个特定的类，这些类形成层次结构，完整的属性和方法集是继承的结果")]),t._v(" "),a("li",[t._v("nodeType  --- 查看节点的类型")]),t._v(" "),a("li",[t._v("nodeName/tagName 大写，只读\n"),a("ul",[a("li",[t._v("tagName 查看元素名")]),t._v(" "),a("li",[t._v("nodeName查看元素名，以及非元素节点名")])])]),t._v(" "),a("li",[t._v("innerHTML  查看元素的HTML内容（解析标签） ，可读可写")]),t._v(" "),a("li",[t._v("outhrHTML 元素完整的HTML（包括标签），可写的操作不会修改元素本身，可读可写")]),t._v(" "),a("li",[t._v("nodeValue/data  非元素节点的文本内容，一般使用data，可以被修改")]),t._v(" "),a("li",[t._v("textContent 元素节点内的文本，去掉< tag >后的，可读可写")]),t._v(" "),a("li",[t._v("hidden 隐藏属性， 与display：none相同")]),t._v(" "),a("li",[t._v("document 类： document==> HTMLDocument==>Document==>Node==>EventTarget==>Object")]),t._v(" "),a("li",[t._v("body类：body==>HTMLBodyElement==>HTMLElement ==>Element ==>Node==> EventTarget ==>Object")])]),t._v(" "),a("h2",{attrs:{id:"特性和属性-attributes特性-和-properties属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#特性和属性-attributes特性-和-properties属性"}},[t._v("#")]),t._v(" 特性和属性 （Attributes特性 和 properties属性）")]),t._v(" "),a("h3",{attrs:{id:"dom属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dom属性"}},[t._v("#")]),t._v(" DOM属性")]),t._v(" "),a("ul",[a("li",[t._v("DOM节点是常规JavaScript对象，可以更改\n"),a("ul",[a("li",[t._v("可以添加属性")]),t._v(" "),a("li",[t._v("可以添加方法（this指向也是点语法前面的）")])])]),t._v(" "),a("li",[t._v("可修改内建属性的原型，例如修改 Element.prototype 为所有元素添加一个新的方法")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Element")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("sayHI")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\ndocument"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayHI")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),a("ul",[a("li",[t._v("有很多值")]),t._v(" "),a("li",[t._v("大小写敏感")])]),t._v(" "),a("h2",{attrs:{id:"html特性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#html特性"}},[t._v("#")]),t._v(" HTML特性")]),t._v(" "),a("ul",[a("li",[t._v("标准特性可以获取")]),t._v(" "),a("li",[t._v("非标准特性需要通过方法\n"),a("ul",[a("li",[t._v("elem.hasAttribute(name) --- 检查特性是否存在")]),t._v(" "),a("li",[t._v("elem.getAttribute(name) --- 获取这个特性值")]),t._v(" "),a("li",[t._v("elem.setAttribute(name,value) ---设置特性值")]),t._v(" "),a("li",[t._v("elem.removeAttribute(name) --- 删除特性")]),t._v(" "),a("li",[t._v("elem.attributes 获取所有特性")])])]),t._v(" "),a("li",[t._v("HTML特征有以下几点特征：\n"),a("ul",[a("li",[t._v("大小写不敏感，在html中大写都是小写")]),t._v(" "),a("li",[t._v("值是字符串")])])])]),t._v(" "),a("h3",{attrs:{id:"属性-特性同步"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#属性-特性同步"}},[t._v("#")]),t._v(" 属性--特性同步")]),t._v(" "),a("ul",[a("li",[t._v("当属性或者特性被修改 对于的属性会自动更新，几个特例除外\n"),a("ul",[a("li",[t._v("value：改变HTML特性值 value 会更新DOM属性，更改DOM属性不会更改HTML特性。场景： 当用户行为可能会导致value的变更，但这些操作之后想恢复原始值， 该值就在HTML特性。")])])])]),t._v(" "),a("h3",{attrs:{id:"dom属性是多类型的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dom属性是多类型的"}},[t._v("#")]),t._v(" DOM属性是多类型的")]),t._v(" "),a("ul",[a("li",[t._v("普遍是字符串")]),t._v(" "),a("li",[t._v("也有对象 如style")]),t._v(" "),a("li",[t._v("input.checked:布尔值")]),t._v(" "),a("li",[t._v("href，DOM属性是一个完整的URL，getAttribute（）是href中的值")])]),t._v(" "),a("h3",{attrs:{id:"非标准的特性-dataset"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#非标准的特性-dataset"}},[t._v("#")]),t._v(" 非标准的特性，dataset")]),t._v(" "),a("ul",[a("li",[t._v("支持自己书写HTML特性")]),t._v(" "),a("li",[t._v("所有data-开头的特性均被保留供程序员使用，他们可在dataset属性中使用\n"),a("ul",[a("li",[t._v("data-vue 通过： elem.dataset.vue读取")]),t._v(" "),a("li",[t._v("data-vue-react 通过：elem.dataset.vueReact 驼峰命名法")]),t._v(" "),a("li",[t._v("可读取，可修改")])])])]),t._v(" "),a("h2",{attrs:{id:"修改文档-document"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修改文档-document"}},[t._v("#")]),t._v(" 修改文档 Document")]),t._v(" "),a("h3",{attrs:{id:"创建一个元素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建一个元素"}},[t._v("#")]),t._v(" 创建一个元素")]),t._v(" "),a("ul",[a("li",[t._v("document.createElement('div') 使用给定的标签，创建一个元素节点")]),t._v(" "),a("li",[t._v("ducument.createTextNode('here i am') 使用给定的文本创建一个文本节点")])]),t._v(" "),a("h3",{attrs:{id:"插入方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#插入方法"}},[t._v("#")]),t._v(" 插入方法")]),t._v(" "),a("ul",[a("li",[t._v("node.append(...node or string) 向node的"),a("strong",[t._v("末尾")]),t._v("插入节点或者字符串")]),t._v(" "),a("li",[t._v("node.prepend(...node or string) 向node的"),a("strong",[t._v("开头")]),t._v("插入节点或者字符串")]),t._v(" "),a("li",[t._v("node.before(...node or string) 向node的"),a("strong",[t._v("前面")]),t._v("插入节点或者字符串")]),t._v(" "),a("li",[t._v("node.after(...node or string) 向node的"),a("strong",[t._v("后面")]),t._v("插入节点或者字符串")]),t._v(" "),a("li",[t._v("node.replaceWith(...node or string) 将node"),a("strong",[t._v("替换")]),t._v("为给定的节点或者字符串")]),t._v(" "),a("li",[t._v("插入的文字都作为文本插入，不会作为html代码。因此会省略< >")])]),t._v(" "),a("h4",{attrs:{id:"insertadjacenthtml-text-element"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#insertadjacenthtml-text-element"}},[t._v("#")]),t._v(" insertAdjacentHTML/Text/Element")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("elem.insertAdjacentHTML(where,html)")]),t._v(" 使用最多  插入的是 html")])]),t._v(" "),a("ul",[a("li",[t._v("beforebegin 将html插入到elem前")]),t._v(" "),a("li",[t._v("afterbegin 将html插入到elem开头")]),t._v(" "),a("li",[t._v("beforeend 将html插入到element 开头")]),t._v(" "),a("li",[t._v("afterend 将html插入到elem后")])]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("elem.insertAdjacentText(where,text) 插入的是 text文本")]),t._v(" "),a("li",[t._v("elem.insertAdjacentElement(where, elem) 插入的是 一个元素")])]),t._v(" "),a("h3",{attrs:{id:"节点移除"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#节点移除"}},[t._v("#")]),t._v(" 节点移除")]),t._v(" "),a("ul",[a("li",[t._v("node.remove()\n"),a("strong",[t._v("元素交换，一个元素移动到另外一个地方，无需从原来的位置删掉， 所有的插入方法都会自动从旧位置删除该元素")])])]),t._v(" "),a("h3",{attrs:{id:"节点克隆"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#节点克隆"}},[t._v("#")]),t._v(" 节点克隆")]),t._v(" "),a("p",[t._v("elem.cloneNode(true/false)")]),t._v(" "),a("ul",[a("li",[t._v("true: 深克隆，具有所有特性和子元素")]),t._v(" "),a("li",[t._v("false 不包括子元素")])]),t._v(" "),a("h3",{attrs:{id:"documentfragment"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#documentfragment"}},[t._v("#")]),t._v(" DocumentFragment")]),t._v(" "),a("p",[t._v("特殊的DOM 节点，原来传递节点列表的包装器（wrapper）\n可以向其附加其他节点，但当我么将其插入某个位置时候，则会插入其内容")]),t._v(" "),a("h3",{attrs:{id:"久远的其他insert-remove方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#久远的其他insert-remove方法"}},[t._v("#")]),t._v(" 久远的其他insert/remove方法")]),t._v(" "),a("ul",[a("li",[t._v("parentElem.appendChild(node) 在parentElem最后添加一个node为子元素")]),t._v(" "),a("li",[t._v("parentElem.insertBefore（node,nextSibing）在parentElem的nextSibing前插入node")]),t._v(" "),a("li",[t._v("parendElem.replaceChild(node,oldChild) 将parendElem的后台中的oldChild替换为node")]),t._v(" "),a("li",[t._v("parendElem.removeChild(node) 移除node\n这些方法都会返回插入/删除的节点")])]),t._v(" "),a("h3",{attrs:{id:"document-write"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#document-write"}},[t._v("#")]),t._v(" document.write")]),t._v(" "),a("ul",[a("li",[t._v("将html写入页面")]),t._v(" "),a("li",[t._v("只在页面加载时工作")]),t._v(" "),a("li",[t._v("不涉及dom的修改")])]),t._v(" "),a("h3",{attrs:{id:"总结-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结-2"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("ul",[a("li",[t._v("创建节点的方法\n"),a("ul",[a("li",[t._v("document.createElement(tag) 用给定的标签创建一个元素节点")]),t._v(" "),a("li",[t._v("document.creareTextNode(value) 创建一个文本节点 （很少使用）")]),t._v(" "),a("li",[t._v("elem.cloneNode(deep) 克隆节点， deep =true 深克隆")])])]),t._v(" "),a("li",[t._v("插入和移除节点的方法\n"),a("ul",[a("li",[t._v("node.append(nodes or string) 在node末尾插入")]),t._v(" "),a("li",[t._v("node.prepend(node or string) 在node开头插入")]),t._v(" "),a("li",[t._v("node.before(node or string) 在node之前插入")]),t._v(" "),a("li",[t._v("node.after(node or string) 在node之后插入")]),t._v(" "),a("li",[t._v("node.replaceWirh(node or string) 替换node")]),t._v(" "),a("li",[t._v("node.remove() 移除node")])])]),t._v(" "),a("li",[t._v("旧时的插入和移除节点\n"),a("ul",[a("li",[t._v("parent.appendChild(node)")]),t._v(" "),a("li",[t._v("parent.insertBefore(node,nextSibing)")]),t._v(" "),a("li",[t._v("parent.removeChild(node)")]),t._v(" "),a("li",[t._v("parent.replaceChild(newElem,node)")])])]),t._v(" "),a("li",[t._v("elem.insertAdjacentHTML(where,html)\n"),a("ul",[a("li",[t._v("beforebegin 将html插入到elem前面")]),t._v(" "),a("li",[t._v("afterbegin 将html插入到elem后面")]),t._v(" "),a("li",[t._v("beforeend 将html插入到elem开头")]),t._v(" "),a("li",[t._v("afterend 将html插入到elem末尾")])])])]),t._v(" "),a("h2",{attrs:{id:"样式和类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#样式和类"}},[t._v("#")]),t._v(" 样式和类")]),t._v(" "),a("h3",{attrs:{id:"classname和-classlist"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#classname和-classlist"}},[t._v("#")]),t._v(" className和 classList")]),t._v(" "),a("ul",[a("li",[t._v("elem.className 对应着 html中的class\n"),a("ul",[a("li",[t._v("可读可写")])])]),t._v(" "),a("li",[t._v("elem.classList 对单个类进行操作\n"),a("ul",[a("li",[t._v("add（class） --添加类")]),t._v(" "),a("li",[t._v("remove（class） --- 删除类")]),t._v(" "),a("li",[t._v("toggle（class） --- 不存在就添加，存在就移除")]),t._v(" "),a("li",[t._v("contains(class)  --- 检查是否存在， 返回true，false")])])])]),t._v(" "),a("h3",{attrs:{id:"元素样式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#元素样式"}},[t._v("#")]),t._v(" 元素样式")]),t._v(" "),a("ul",[a("li",[t._v("style\n"),a("ul",[a("li",[t._v("可读可写")]),t._v(" "),a("li",[t._v("多词使用驼峰命名法")]),t._v(" "),a("li",[t._v("浏览器前缀也是驼峰命名法")])])])]),t._v(" "),a("h3",{attrs:{id:"样式重置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#样式重置"}},[t._v("#")]),t._v(" 样式重置")]),t._v(" "),a("ul",[a("li",[t._v('document.body.style.display = "" 将属性设置为空字符串， 浏览器通常会引用css类以及内建样式，就好像没有style属性一样')]),t._v(" "),a("li",[t._v("style.cssText 来完全重写\n"),a("ul",[a("li",[t._v("可读可写")]),t._v(" "),a("li",[t._v("覆盖样式，完全重写\n"),a("strong",[t._v("单位需要添加")])])])])]),t._v(" "),a("h3",{attrs:{id:"计算样式-getcomputedstyle"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#计算样式-getcomputedstyle"}},[t._v("#")]),t._v(" 计算样式： getComputedStyle")]),t._v(" "),a("ul",[a("li",[t._v("ele.style只能获取 style内联样式起作用，无法对css书写的样式生效\n解决办法： getComputedStyle(elem,[pseudo ])\n"),a("ul",[a("li",[t._v("element 要读取样式值的元素")]),t._v(" "),a("li",[t._v("pseudo 伪元素， 例如::before（不写既不需要，意味着元素本身）")]),t._v(" "),a("li",[t._v("只读")])])])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("computed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("margin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"元素大小和滚动"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#元素大小和滚动"}},[t._v("#")]),t._v(" 元素大小和滚动")]),t._v(" "),a("h3",{attrs:{id:"offsetparent-offsetleft-top"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#offsetparent-offsetleft-top"}},[t._v("#")]),t._v(" offsetParent ,offsetLeft/Top")]),t._v(" "),a("h3",{attrs:{id:"offsetparent-最接近的祖先"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#offsetparent-最接近的祖先"}},[t._v("#")]),t._v(" offsetParent: 最接近的祖先]")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("offsetLeft,offsetTop提供相对于offsetParent左上角的x/y坐标\n祖先元素：")]),t._v(" "),a("ol",[a("li",[t._v("css定位的position为absolute，relative，fixed；")]),t._v(" "),a("li",[t._v("td,th,table")]),t._v(" "),a("li",[t._v("body")])])]),t._v(" "),a("li",[a("p",[t._v("offsetParent的值为null的情况：")]),t._v(" "),a("ol",[a("li",[t._v("对于未显示的元素（display：none）")]),t._v(" "),a("li",[t._v("对于< body>< html>元素")]),t._v(" "),a("li",[t._v("对于带有position：fixed的元素")])])])]),t._v(" "),a("h4",{attrs:{id:"offsetwidth-offsetheight"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#offsetwidth-offsetheight"}},[t._v("#")]),t._v(" offsetWidth/offsetHeight")]),t._v(" "),a("ul",[a("li",[t._v("提供了外部的width/height，完整大小，包括边框，padding， 滚动条")]),t._v(" "),a("li",[t._v("计算 offsetWidth = width + padding + border + 滚动条")]),t._v(" "),a("li",[t._v("未显示的元素。 几何属性为0/null(如一个元素（或其任何祖先）具有display：none，或不在文档中，则所有几何属性均为零)")])]),t._v(" "),a("h3",{attrs:{id:"clienttop-left-width-height"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#clienttop-left-width-height"}},[t._v("#")]),t._v(" clientTop/left Width/Height")]),t._v(" "),a("h4",{attrs:{id:"clienttop-left"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#clienttop-left"}},[t._v("#")]),t._v(" clientTop/left")]),t._v(" "),a("ul",[a("li",[t._v("测量边框（相对坐标），并不是边框的width/height")]),t._v(" "),a("li",[t._v("clientLeft === 左边框宽度")]),t._v(" "),a("li",[t._v("clientTop === 上边框宽度")])]),t._v(" "),a("h4",{attrs:{id:"clientwidth-height"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#clientwidth-height"}},[t._v("#")]),t._v(" clientWidth/Height")]),t._v(" "),a("ul",[a("li",[t._v("提供元素边框内区域的大小（不包括滚动条）")]),t._v(" "),a("li",[t._v("计算： clientWidth = width+ padding")]),t._v(" "),a("li",[t._v("没有padding时可以用来计算内容区域的大小")])]),t._v(" "),a("h3",{attrs:{id:"scrollwidth-height"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scrollwidth-height"}},[t._v("#")]),t._v(" scrollWidth/Height")]),t._v(" "),a("p",[t._v("和 clientWidth类似，但包括滚动出不可见的部分")]),t._v(" "),a("h4",{attrs:{id:"scrollleft-scrolltop"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scrollleft-scrolltop"}},[t._v("#")]),t._v(" scrollLeft/scrollTop")]),t._v(" "),a("p",[t._v("元素滚动到多少了\nscrollLeft/scrollTop 是可修改的")]),t._v(" "),a("h3",{attrs:{id:"不要从css中获取width-height"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#不要从css中获取width-height"}},[t._v("#")]),t._v(" 不要从css中获取width/height")]),t._v(" "),a("ul",[a("li",[t._v("css的width和height受box-sizing控制")]),t._v(" "),a("li",[t._v("css的width和height可能是auto")]),t._v(" "),a("li",[t._v("滚动条")])]),t._v(" "),a("h3",{attrs:{id:"clientwidth和width的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#clientwidth和width的区别"}},[t._v("#")]),t._v(" clientWidth和width的区别")]),t._v(" "),a("ul",[a("li",[t._v("clientWidth的值是数值，而getComputedStyle(elem).width返回的是已px作为后缀的字符串")]),t._v(" "),a("li",[t._v("getComputedStyle(elem).width会返会非数值的width，如auto")]),t._v(" "),a("li",[t._v("clientWidth会包括padding，而css with(box-sizing)不包括padding")]),t._v(" "),a("li",[t._v("如果有滚动条clientWidth总是会减去滚动条，而width则根据浏览器来")])]),t._v(" "),a("h2",{attrs:{id:"window大小和滚动"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#window大小和滚动"}},[t._v("#")]),t._v(" window大小和滚动")]),t._v(" "),a("h3",{attrs:{id:"窗口的大小和width和height"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#窗口的大小和width和height"}},[t._v("#")]),t._v(" 窗口的大小和width和height")]),t._v(" "),a("ul",[a("li",[t._v("document.documentElement.clientWidth/clientHeight 会除开浏览器的滚动条宽度和高度")])]),t._v(" "),a("h3",{attrs:{id:"获得当前滚动"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#获得当前滚动"}},[t._v("#")]),t._v(" 获得当前滚动")]),t._v(" "),a("ul",[a("li",[t._v("DOM元素的当前滚动状态在其scrollLeft/scrollTop属性中")]),t._v(" "),a("li",[t._v("window.pageYOffset 顶部滚动的距离")]),t._v(" "),a("li",[t._v("window.pagexOffset 左侧滚动的距离\n"),a("ul",[a("li",[t._v("window.pageXOffset 是 window.scrollX 的别名。")]),t._v(" "),a("li",[t._v("window.pageYOffset 是 window.scrollY 的别名。")])])])]),t._v(" "),a("h3",{attrs:{id:"滚动-scrollto-scrollby-scrollintoview"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#滚动-scrollto-scrollby-scrollintoview"}},[t._v("#")]),t._v(" 滚动： scrollTo,scrollBy,scrollIntoView")]),t._v(" "),a("p",[a("strong",[t._v("必须在DOM完全构建后才能通过JavaScript滚动页面")])]),t._v(" "),a("ul",[a("li",[t._v("window.scrollTo(pageX,pageY) 将页面滚动至绝对坐标的pageX,pageY的位置（可见部分左上角相对于文档的坐标）")]),t._v(" "),a("li",[t._v("window.scrollBy(pageX,pageY) 将页面滚动相对于当前位置的（x,y）位置")]),t._v(" "),a("li",[t._v("elem.scrollIntoView(top)\n"),a("ul",[a("li",[t._v("top:布尔值")]),t._v(" "),a("li",[t._v("top=true 页面滚动，使elem出现在窗口顶部，元素的上边缘与窗口底部对齐")]),t._v(" "),a("li",[t._v("top=false 页面滚动，使elem出现在窗口底部，元素的底部边缘将于窗口底部对齐")])])])]),t._v(" "),a("h3",{attrs:{id:"禁止滚动"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#禁止滚动"}},[t._v("#")]),t._v(" 禁止滚动")]),t._v(" "),a("ul",[a("li",[t._v('document.body.style.overflow = "hidden"将页面冻结')])]),t._v(" "),a("h2",{attrs:{id:"坐标"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#坐标"}},[t._v("#")]),t._v(" 坐标")]),t._v(" "),a("p",[t._v("坐标系的处理方式")]),t._v(" "),a("ol",[a("li",[t._v("相对于窗口： 类似于 position:fixed;")])]),t._v(" "),a("ul",[a("li",[t._v("使用clientX,clientY表示")])]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("相对于文档： 类似于position:absolute;")])]),t._v(" "),a("ul",[a("li",[t._v("使用 pageX,pageY表示")])]),t._v(" "),a("h3",{attrs:{id:"窗口坐标"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#窗口坐标"}},[t._v("#")]),t._v(" 窗口坐标")]),t._v(" "),a("h4",{attrs:{id:"元素坐标-getboundingclientrect"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#元素坐标-getboundingclientrect"}},[t._v("#")]),t._v(" 元素坐标:getBoundingClientRect")]),t._v(" "),a("p",[t._v("elem.getBoundingClientRect()返回最小矩形的窗口坐标，该矩形将elem作为内建DOMRect类的对象\nDOMRect():")]),t._v(" "),a("ul",[a("li",[t._v("x/y ---矩形原点相对于窗口的X/Y坐标；")]),t._v(" "),a("li",[t._v("width/height --矩形的width/height")]),t._v(" "),a("li",[t._v("top/bottom - -边缘的Y坐标")]),t._v(" "),a("li",[t._v("left/right -- 左/右矩形边缘的X坐标")]),t._v(" "),a("li",[t._v("left = x")]),t._v(" "),a("li",[t._v("top = y")]),t._v(" "),a("li",[t._v("right = x + width")]),t._v(" "),a("li",[t._v("bottom = y + height\nps：")]),t._v(" "),a("li",[t._v("ie不支持 (polify)")]),t._v(" "),a("li",[t._v("right/bottom 和css position 属性不一样")])]),t._v(" "),a("h4",{attrs:{id:"elementfrompoint-x-y"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#elementfrompoint-x-y"}},[t._v("#")]),t._v(" elementFromPoint(x,y)")]),t._v(" "),a("ul",[a("li",[t._v("返回在窗口坐标（x,y)处嵌套最多的元素")]),t._v(" "),a("li",[t._v("会因滚动位置而有所不同")]),t._v(" "),a("li",[t._v("在窗口之外的坐标，elementFromPoint返回null")]),t._v(" "),a("li",[t._v("只对可见区域内的坐标起作用")])]),t._v(" "),a("h3",{attrs:{id:"文档坐标"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文档坐标"}},[t._v("#")]),t._v(" 文档坐标")]),t._v(" "),a("p",[t._v("文档相对坐标从文档的左上角开始计算，而不是窗口")]),t._v(" "),a("ul",[a("li",[t._v("pageY = clientY + 文档的垂直滚动出来的部分的高度")]),t._v(" "),a("li",[t._v("pageX = clientX + 文档水平滚动出来的部分的宽度")])]),t._v(" "),a("h3",{attrs:{id:"总结-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结-3"}},[t._v("#")]),t._v(" 总结：")]),t._v(" "),a("ol",[a("li",[t._v("相对于窗口的坐标： elem.getBoundingClientRect() ---适合和fixed一起使用")]),t._v(" "),a("li",[t._v("相对于文档的坐标： elem.getBoundingClientRect() + 当前页面滚动的距离（pageXOffset） ---适合和absolute一起使用")])]),t._v(" "),a("h2",{attrs:{id:"window-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#window-2"}},[t._v("#")]),t._v(" window")]),t._v(" "),a("p",[t._v("window.open('https://...')")]),t._v(" "),a("h3",{attrs:{id:"阻止弹窗"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#阻止弹窗"}},[t._v("#")]),t._v(" 阻止弹窗：")]),t._v(" "),a("p",[a("strong",[t._v("如果弹窗是在用户触发的事件处理程序（如 onclick）之外调用的，大多数浏览器都会阻止此类弹窗。")])]),t._v(" "),a("h3",{attrs:{id:"语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[t._v("#")]),t._v(" 语法")]),t._v(" "),a("p",[t._v("window.open(url,name,params)")]),t._v(" "),a("ul",[a("li",[t._v("url: 新窗口中加载的URL")]),t._v(" "),a("li",[t._v("name：新窗口的名字")]),t._v(" "),a("li",[t._v("params： 新窗口的配置字符串")])]),t._v(" "),a("h3",{attrs:{id:"关闭弹窗"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关闭弹窗"}},[t._v("#")]),t._v(" 关闭弹窗")]),t._v(" "),a("ul",[a("li",[t._v("window.close()")]),t._v(" "),a("li",[t._v("检查一个窗口是否被关闭： window.close ，为true表示关闭")]),t._v(" "),a("li",[t._v("close可以用于任何window，但如果window不是通过window.open（）创建的， 浏览器会忽略window.close()")])]),t._v(" "),a("h2",{attrs:{id:"跨窗口通信"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#跨窗口通信"}},[t._v("#")]),t._v(" 跨窗口通信")]),t._v(" "),a("p",[t._v("同源策略： 保护用户免遭信息盗窃")]),t._v(" "),a("h3",{attrs:{id:"同源-策略规定"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#同源-策略规定"}},[t._v("#")]),t._v(" “同源”策略规定：")]),t._v(" "),a("ul",[a("li",[t._v("如果我们有对另外一个窗口（例如，一个使用 window.open 创建的弹窗，或者一个窗口中的 iframe）的引用，并且该窗口是同源的，那么我们就具有对该窗口的全部访问权限。")]),t._v(" "),a("li",[t._v("否则，如果该窗口不是同源的，那么我们就无法访问该窗口中的内容：变量，文档，任何东西。唯一的例外是 location：我们可以修改它（进而重定向用户）。但是我们无法读取 location（因此，我们无法看到用户当前所处的位置，也就不会泄漏任何信息）。")])]),t._v(" "),a("h3",{attrs:{id:"iframe标签"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#iframe标签"}},[t._v("#")]),t._v(" iframe标签")]),t._v(" "),a("p",[t._v("承载了一个单独的嵌入的窗口，它具有自己的document和window")]),t._v(" "),a("ul",[a("li",[t._v("iframe.contentWindow  来获取 < iframe> 中的 window。")]),t._v(" "),a("li",[t._v("iframe.contentDocument 来获取 < iframe> 中的 document，是\niframe.contentWindow.document 的简写形式。\n"),a("strong",[t._v("iframe标签必须同源。不同源会拒绝访问")])]),t._v(" "),a("li",[t._v("加载iframe事件\niframe.contentWindow.onload === iframe.onload 当嵌入的窗口的所有资源都完全加载完毕时触发。\n无法使用iframe.contentWindow.onload访问不同源的iframe")])]),t._v(" "),a("h3",{attrs:{id:"子域名上的window-document-domain"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#子域名上的window-document-domain"}},[t._v("#")]),t._v(" 子域名上的window ：document.domain")]),t._v(" "),a("p",[t._v("仅适用于窗口的二级域相同时可以使用\ndocument.domain = 'xxx'")]),t._v(" "),a("p",[a("strong",[t._v("不能在iframe未加载完前对文档进行处理，那是错误的文档&")])]),t._v(" "),a("h3",{attrs:{id:"页面集合iframe-window-frames"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#页面集合iframe-window-frames"}},[t._v("#")]),t._v(" 页面集合iframe window.frames")]),t._v(" "),a("ul",[a("li",[t._v("通过索引： window.frames[0] 获取文档中第一个iframe的window对象")]),t._v(" "),a("li",[t._v('同名称 ： window.frames.iframeName 获取name="iframeName" 的iframe的window对象')])]),t._v(" "),a("h4",{attrs:{id:"一个-iframe-内可能嵌套了其他的-iframe。相应的-window-对象会形成一个层次结构-hierarchy-。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一个-iframe-内可能嵌套了其他的-iframe。相应的-window-对象会形成一个层次结构-hierarchy-。"}},[t._v("#")]),t._v(" 一个 iframe 内可能嵌套了其他的 iframe。相应的 window 对象会形成一个层次结构（hierarchy）。")]),t._v(" "),a("p",[t._v("可以通过以下方式获取：\n*window.frames —— “子”窗口的集合（用于嵌套的 iframe）。")]),t._v(" "),a("ul",[a("li",[t._v("window.parent —— 对“父”（外部）窗口的引用。")]),t._v(" "),a("li",[t._v("window.top —— 对最顶级父窗口的引用。")])]),t._v(" "),a("h3",{attrs:{id:"sandbox-iframe特性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sandbox-iframe特性"}},[t._v("#")]),t._v(" sandbox iframe特性")]),t._v(" "),a("p",[t._v("允许在iframe中禁止某些行为 ，它会被强制处于“非同源”状态")]),t._v(" "),a("ul",[a("li",[t._v("空的 sandbox会施加最严格的限制")])]),t._v(" "),a("h3",{attrs:{id:"跨窗口通信-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#跨窗口通信-2"}},[t._v("#")]),t._v(" 跨窗口通信")]),t._v(" "),a("p",[t._v("postMessage 接口允许窗口之间相互通信，无论他们来自什么源--是解决同源策略的方式之一")]),t._v(" "),a("h4",{attrs:{id:"postmessage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#postmessage"}},[t._v("#")]),t._v(" postMessage")]),t._v(" "),a("p",[t._v("发消息：win.postMessage(data, targetOrigin)\ndata： 要发送的数据\ntargetOrigin : 目标窗口的源，只有来自给定的源的窗口才能获得该信息\n* 表示不做同源检查")]),t._v(" "),a("h4",{attrs:{id:"onmessage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#onmessage"}},[t._v("#")]),t._v(" onmessage")]),t._v(" "),a("p",[t._v("接收消息： 当postMessage被调用时触发，并且targettOrigin检查成果了")]),t._v(" "),a("ul",[a("li",[t._v("data 从postmessage接受到的信息")]),t._v(" "),a("li",[t._v("origin 发送方的源")]),t._v(" "),a("li",[t._v("source 对对方窗口的应用")]),t._v(" "),a("li",[t._v("使用 addEventListener 来在目标窗口中设置 message 事件的处理程序。")])]),t._v(" "),a("h2",{attrs:{id:"点击劫持攻击"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#点击劫持攻击"}},[t._v("#")]),t._v(" 点击劫持攻击")]),t._v(" "),a("p",[t._v("点击劫持攻击 允许恶意页面以用户的名义点击受害网站")]),t._v(" "),a("h3",{attrs:{id:"原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原理"}},[t._v("#")]),t._v(" 原理：")]),t._v(" "),a("ol",[a("li",[t._v("访问者被恶意页面吸引。怎样吸引的不重要。")]),t._v(" "),a("li",[t._v("页面上有一个看起来无害的链接（例如：“变得富有”或者“点我，超好玩！”）。")]),t._v(" "),a("li",[t._v("恶意页面在该链接上方放置了一个透明的 < iframe >，其 src 来自于 facebook.com，这使得“点赞”按钮恰好位于该链接上面。这通常是通过 z-ind ex  实现的。")]),t._v(" "),a("li",[t._v("用户尝试点击该链接时，实际上点击的是“点赞”按钮。")])]),t._v(" "),a("h3",{attrs:{id:"防御"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#防御"}},[t._v("#")]),t._v(" 防御：")]),t._v(" "),a("h4",{attrs:{id:"传统防御"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#传统防御"}},[t._v("#")]),t._v(" 传统防御：")]),t._v(" "),a("p",[t._v("禁止在frame页面中打开JavaScript代码")]),t._v(" "),a("ul",[a("li",[t._v("X-Frame-Options 可以允许或禁止在frame中显示页面\n"),a("ul",[a("li",[t._v("DENY\n始终禁止在 frame 中显示此页面。")]),t._v(" "),a("li",[t._v("SAMEORIGIN\n允许在和父文档同源的 frame 中显示此页面。")]),t._v(" "),a("li",[t._v("ALLOW-FROM domain\n允许在来自给定域的父文档的 frame 中显示此页面。")]),t._v(" "),a("li",[t._v("X-Frame-Options 有一个副作用。其他的网站即使有充分的理由也无法在 frame 中显示我们的页面。")])])])]),t._v(" "),a("h4",{attrs:{id:"总结-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结-4"}},[t._v("#")]),t._v(" 总结：")]),t._v(" "),a("ul",[a("li",[t._v("建议在那些不希望被在 frame 中查看的页面上（或整个网站上）使用 X-Frame-Options: SAMEORIGIN。")]),t._v(" "),a("li",[t._v("如果我们希望允许在 frame 中显示我们的页面，那我们使用一个 < div > 对整个页面进行遮盖，这样也是安全的。")])])])}),[],!1,null,null,null);e.default=v.exports}}]);